{"version":3,"sources":["components/Header.js","components/Form.js","components/Card.js","containers/Content.js","components/Cards.js","img/norris.jpg","containers/App.js","index.js"],"names":["Header","className","Form","props","categories","getRandom","selectCategory","handleRandomCat","selectInput","search","onClick","defaultValue","onChange","disabled","value","map","el","type","placeholder","Card","fact","src","icon_url","title","Content","cards","makeVisible","divVisible","useEffect","id","Cards","total","result","forEach","push","App","useState","setFact","setCategories","category","setCategory","input","setInput","setDivVisible","a","fetch","json","document","addEventListener","e","console","log","target","tagName","getElementById","closest","style","display","event","preventDefault","length","previousElementSibling","backgroundImage","Background","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a49c38da.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n\treturn (\n\t\t<div className='tc-ns'>\n\t\t\t<h1 className=\"f1-l f3-m f5 fw2 white-90 mb0 lh-title mt0 pt2\">These are facts about Mr Chuck Norris</h1>\n\t\t\t<h2 className=\"f3-l f5-m f7 fw1  white-80 mt3 mb4\">You can choose different methods to get them</h2>\n\t\t</div>\n\t\t\n\t)\n}\n\nexport default Header","const Form = (props) => {\n\tconst {\n\t\tcategories,\n\t\tgetRandom,\n\t\tselectCategory,\n\t\thandleRandomCat,\n\t\tselectInput,\n\t\tsearch\n\t} = props\n\treturn(\n\t\t<div className=\" flex items-center flex-column white-90 f7 f6-m f5-l\">\n\t\t\t<div>\n\t\t\t\t<button onClick={getRandom}className=\" link dim br3 ph3 pv2 mb2 dib white bg-dark-blue\">Random</button>\n\t\t\t</div>\n            or\n\t\t\t<form>\n\t\t\t\t<select defaultValue onChange={selectCategory}>\n\t\t\t\t\t<option disabled value> -select an option- </option>\n\t\t\t\t\t{categories.map( el => <option key={el} value={el}>{el}</option>)}\n\t\t\t\t</select>\n\n\t\t\t\t<button type=\"submit\" onClick={handleRandomCat}className=\" link dim br3 ph3 pv2 mb2 dib white bg-dark-blue\">Random By Category</button>\n\t\t\t</form>\n            or\n\t\t\t<form>\n\t\t\t\t<input onChange={selectInput} placeholder='Use 3 symbols or more'/>\n\t\t\t\t<button type='submit' onClick={search} className=\" link dim br3 ph3 pv2 mb2 dib white bg-dark-blue\">With Keyword</button>\n\t\t\t</form>\n\n\t\t</div>\n\t)\n}\n\nexport default Form","const Card = (props) => {\n\tconst { fact } = props\n\treturn (\n\t\t<article className=\"f3-l f4-m f5 center bg-white-80 br3 pa3 pa4-ns mv3 ba b--black-10\">\n\t\t\t<div className=\"tc\">\n\t\t\t\t<img src={fact.icon_url} className=\"br-5 h3 w3 dib\" title=\"Photo of a kitty staring at you\" />\n\t\t\t\t<hr className=\"mw3 bb bw1 b--black-10\" />\n\t\t\t</div>\n\t\t\t<p className=\"lh-copy measure center black-70 \">{fact.value} </p>\n\t\t</article>\n\t)\n}\n\nexport default Card","import React, { useEffect } from 'react'\r\nconst Content = ({ fact, cards, makeVisible, divVisible }) => {\r\n    \r\n    useEffect(()=>{\r\n        makeVisible(divVisible)\r\n    },[fact])\r\n\r\n    return(\r\n        <div className='mw6 center overflow-y-auto overflow-x-hidden mt1 mb3' id='content'>\r\n\t\t\t{ cards }\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react'\nimport Card from './Card'\nimport Content from '../containers/Content'\n\nconst Cards = ({ fact, makeVisible, divVisible }) => {\n\tconst cards = []\n\tif (fact?.total > 0) {\n\t\tfact.result.forEach( el => cards.push(<Card key={el.id} fact={el} />))\n\t} else if (fact.total === 0){\n\t\t\n\t} else {\n\t\tcards.push(<Card key={fact.id} fact={fact} />)\n\t}\n\treturn (\n\t\t<Content fact={fact} cards={cards} makeVisible={makeVisible}  divVisible={divVisible} />\n\t)\n}\n\nexport default Cards","export default __webpack_public_path__ + \"static/media/norris.88086148.jpg\";","import React, { useEffect, useState } from 'react'\nimport Header from '../components/Header'\nimport Form from '../components/Form'\nimport Cards from '../components/Cards'\nimport Background from '../img/norris.jpg'\n\n\nfunction App() {\n\n\tconst [ fact, setFact ] = useState(null)\n\tconst [categories, setCategories] = useState([])\n\tconst [category, setCategory] = useState('')\n\tconst [input, setInput] = useState('')\n\tconst [divVisible, setDivVisible] = useState(false)\n\n\t\n\n\tuseEffect(async() => {\n\t\tlet categories = await fetch('https://api.chucknorris.io/jokes/categories')\n\t\tcategories = await categories.json()\n\t\tsetCategories(categories)\n\t\tdocument.addEventListener('click', (e)=>{\n\t\t\tconsole.log(e.target.tagName)\n\t\t\tif (document.getElementById('content') && e.target.tagName !== 'BUTTON') {\n\t\t\t\tlet el = document.getElementById('content')\n\t\t\t\tif (e.target.closest('#content')) {\n\t\t\t\t\tconsole.log('inside of content')\n\t\t\t\t} else {\n\t\t\t\t\tsetDivVisible(false)\n\t\t\t\t\tel.style.display = 'none'\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}, [])\n\tuseEffect(()=>{console.log(divVisible, fact)},[divVisible, fact])\n\tuseEffect(()=>{\n\t\tif(fact !== null){\n\t\t\tsetDivVisible(true)\n\t\t}\n\t}, [fact])\n\n\tconst makeVisible = (divVisible) => {\n\t\tconst el = document.getElementById('content')\n\t\tif(!divVisible) {\n\t\t\tsetDivVisible(true)\n\t\t\tel.style.display = 'block'\n\t\t}\n\t}\n\t\n\t\n\tconst getRandom = async () => {\n\t\tlet fact = await fetch('https://api.chucknorris.io/jokes/random')\n\t\tfact = await fact.json()\n\t\tsetFact(fact)\n\t}\n\n\tconst selectCategory = (event) => {\n\t\tsetCategory(event.target.value)\n\t}\n\tconst handleRandomCat = async (event) => {\n\t\tevent.preventDefault()\n\t\tif (category === '') {return}\n\t\tlet fact = await fetch(`https://api.chucknorris.io/jokes/random?category=${category}`)\n\t\tfact = await fact.json()\n\t\tsetFact(fact)\n\t}\n\tconst selectInput = (event) => {\n\t\tsetInput(event.target.value)\n\t}\n\tconst search = async (event) => {\n\t\tevent.preventDefault()\n\t\tif (input === '' || input.length < 3) { return }\n\t\tlet fact = await fetch(`https://api.chucknorris.io/jokes/search?query=${input}`)\n\t\tfact = await fact.json()\n\t\tsetInput('')\n\t\tevent.target.previousElementSibling.value = ''\n\t\tsetFact(fact)\n\n\t}\n\t\n\treturn (\n\t\t<div className=\" tc sans-serif contain bg-center\" style={{ backgroundImage: `url(${Background})` }}>\n\t\t\t<div className=\"bg-black-50 bg-black-80 vh-100  flex flex-column justify-between\" >\n\t\t\t\t<Header />\n\t\t\t\t{ fact!==null ? <Cards makeVisible={makeVisible} divVisible={divVisible} fact={fact}/> : ''}\n\t\t\t\t<Form\n\t\t\t\t\tcategories={categories}\n\t\t\t\t\tgetRandom={getRandom}\n\t\t\t\t\tselectCategory={selectCategory}\n\t\t\t\t\thandleRandomCat={handleRandomCat}\n\t\t\t\t\tselectInput={selectInput}\n\t\t\t\t\tsearch={search}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App'\nimport 'tachyons'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n\n"],"sourceRoot":""}